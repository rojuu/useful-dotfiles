//
// settings.json
//

"editor.minimap.enabled": false,
"editor.rulers": [
    80,
    100
],
"zenMode.fullScreen": false,
"zenMode.centerLayout": false,
"zenMode.showTabs": "single",
"git.autofetch": true,

"[typescript][typescriptreact][javascript][javascriptreact]": {
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
},

"editor.selectionClipboard": false, // disable x11 paste with middle mouse
"clangd.arguments": [
    "--header-insertion=never",
    "--background-index",
    "--clang-tidy",
],
"git.inputValidationSubjectLength": 72,
"git.inputValidationLength": 80,


// Cmake tools config stuff
"cmake.buildDirectory": "${workspaceFolder}/build/${buildKit}/${buildType}/",
"cmake.configureArgs": [
    "-DSOME_ARG_FROM_CMAKE=ON",
],

//
// keybindings.json
//
[
    { "key": "ctrl+j",            "command": "editor.action.joinLines"                            },
    { "key": "ctrl+j",            "command": "-workbench.action.togglePanel"                      },
    { "key": "ctrl+f10",          "command": "editor.debug.action.runToCursor"                    },
    { "key": "alt+left",          "command": "workbench.action.navigateBack"                      },
    { "key": "alt+right",         "command": "workbench.action.navigateForward"                   },
    { "key": "ctrl+r",            "command": "workbench.action.gotoSymbol"                        },
    { "key": "ctrl+alt+s",        "command": "workbench.action.files.saveAll"                     },
    { "key": "escape",            "command": "workbench.action.closePanel",
        "when": "editorTextFocus && panelVisible"                                                 },
    { "key": "ctrl+m",            "command": "editor.action.jumpToBracket", 
        "when": "editorTextFocus"                                                                 },
]

//
// tasks.json
//
// simplest build task to run build.bat and run the msCompile matcher
// on the result, so when you are compiling C or C++, you can use 
// F8 to jump to the build errors
{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "shell",
			"label": "build",
			"command": "${workspaceFolder}/build.bat",
			"problemMatcher": [ "$msCompile" ],
			"group": {
				"kind": "build",
				"isDefault": true
			}
		}
	]
}


//
// launch.json
//

// C++ debugging examples
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "launch debug",
            "request": "launch",

            // For code lldb extension
            "type": "lldb",
            "env": {
                "LSAN_OPTIONS": "log_threads=1:fast_unwind_on_malloc=0",
                "LSAN_OPTIONS": "log_threads=1:verbosity=1",
            },

            // For default c++ extension
            "type": "cppdbg",
            "stopAtEntry": false,
            "environment": [
                { "name": "LSAN_OPTIONS", "value": "log_threads=1:fast_unwind_on_malloc=0" },
                { "name": "LSAN_OPTIONS", "value": "log_threads=1:verbosity=1", },
            ],

            // These are useful when using cmake tools for debugging
            "program": "${command:cmake.launchTargetPath}",
            "cwd": "${command:cmake.launchTargetDirectory}",

            // Provide args
            "args": [
                "--some_arg", "1",
                // "--some_other_arg_that_is_commented_out",
            ]
        }
    ]
}
