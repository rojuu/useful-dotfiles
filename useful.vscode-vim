// keybindings.json
[
    { "key": "ctrl+tab", "command": "workbench.action.togglePanel" },
    { "key": "ctrl+oem_plus", "command": "editor.action.fontZoomIn" },
    { "key": "ctrl+oem_minus", "command": "editor.action.fontZoomOut" },
    { "key": "ctrl+0", "command": "editor.action.fontZoomReset" },

    { "key": "ctrl+oem_7", "command": "workbench.action.focusActiveEditorGroup" }, // ctrl+Ã¤

    { "key": "ctrl+h", "command": "workbench.action.focusLeftGroup" },
    { "key": "ctrl+j", "command": "workbench.action.focusBelowGroup" },
    { "key": "ctrl+k", "command": "workbench.action.focusAboveGroup" },
    { "key": "ctrl+l", "command": "workbench.action.focusRightGroup" },

    { "key": "alt+b", "command": "workbench.action.toggleSidebarVisibility" },
    { "key": "alt+0", "command": "workbench.files.action.focusFilesExplorer" },
    { "key": "alt+z", "command": "workbench.action.toggleZenMode" },

    { "key": "ctrl+oem_comma", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
    { "key": "ctrl+oem_period", "command": "workbench.action.terminal.split", "when": "terminalFocus" },
    { "key": "ctrl+shift+oem_period", "command": "workbench.action.terminal.kill", "when": "terminalFocus" },
    { "key": "ctrl+m", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus", },
    { "key": "ctrl+shift+m", "command": "workbench.action.terminal.new", "when": "terminalFocus", }
]

// settings.json
{
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-p>": false,
    },
    "vim.normalModeKeyBindingsNonRecursive": [
        { "before": [ "<leader>", "v" ],    "commands": [ ":vsplit", "<C-W>", "<C-l>" ]                                        },
        { "before": [ "<leader>", "q" ],    "commands": [ "workbench.action.closeEditorsInGroup" ]                             },
        { "before": [ "<leader>", "h" ],    "commands": [ "workbench.action.moveEditorToLeftGroup" ]                           },
        { "before": [ "<leader>", "j" ],    "commands": [ "workbench.action.moveEditorToBelowGroup" ]                          },
        { "before": [ "<leader>", "k" ],    "commands": [ "workbench.action.moveEditorToAboveGroup" ]                          },
        { "before": [ "<leader>", "l" ],    "commands": [ "workbench.action.moveEditorToRightGroup" ]                          },
        { "before": [ "<leader>", "r" ],    "commands": [ "workbench.action.gotoSymbol" ]                                      },
        { "before": [ "<leader>", "t" ],    "commands": [ "workbench.action.showAllSymbols" ]                                  },
        { "before": [ "<leader>", "b" ],    "commands": [ "workbench.action.toggleSidebarVisibility" ]                         },
        { "before": [ "<leader>", "0" ],    "commands": [ "workbench.files.action.focusFilesExplorer" ]                        },
        { "before": [ "<leader>", "z" ],    "commands": [ "workbench.action.toggleZenMode" ]                                   },
        { "before": [ "-" ],                "commands": [ "vsnetrw.open" ],               "when": "editorLangId != vsnetrw"    },
        { "before": [ "<ESC>"],             "commands": [ "notifications.hideToasts" ],   "when": "notificationToastsVisible"  },
        { "before": [ "K" ],                "after": [ "g", "h" ]                                                              },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        { "before": [ "<C-d>" ],   "commands": [ "editor.action.addSelectionToNextFindMatch" ]              },
        { "before": [ "<C-n>" ],   "commands": [ "editor.action.moveSelectionToNextFindMatch" ]             },
        { "before": [ "<C-u>" ],   "commands": [ "cursorUndo" ]                                             },
        { "before": [ "s" ],       "commands": [ "git.stageSelectedRanges" ],     "when": "isInDiffEditor"  },
        { "before": [ "u" ],       "commands": [ "git.unstageSelectedRanges" ],   "when": "isInDiffEditor"  },
        { "before": [ "r" ],       "commands": [ "git.revertSelectedRanges" ],    "when": "isInDiffEditor"  },
    ],
}
